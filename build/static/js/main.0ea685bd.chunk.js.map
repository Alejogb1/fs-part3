{"version":3,"sources":["components/personForm.js","components/Persons.js","components/Filter.js","services/fetchData.js","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["personForm","addNote","newName","newNumber","handleChangeName","handleChangeNumber","onSubmit","onChange","value","type","Persons","persons","deletePerson","console","log","map","person","name","number","onClick","id","Filter","addFilter","handleChangeFilter","BASE_URL","axios","get","object","post","put","Notification","notification","message","className","App","useState","setPersons","setNewName","setNewNumber","filterName","setFilterName","setNotification","useEffect","fetchData","then","response","data","e","preventDefault","noteObject","filter","concat","forEach","window","confirm","target","filteredPersons","personName","personId","delete","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ea685bd.chunk.js","sourcesContent":["\r\n\r\n\r\n\r\nconst personForm = ({\r\n  addNote, \r\n  newName, \r\n  newNumber,\r\n  handleChangeName,\r\n  handleChangeNumber\r\n}) => {\r\n\r\n  return (\r\n    <form onSubmit={addNote}>\r\n        <div>\r\n          name: <input onChange={handleChangeName} value={newName} />\r\n        </div>\r\n        <div>\r\n          number: <input onChange={handleChangeNumber} type=\"number\" value={newNumber} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default personForm","const Persons = ({persons, deletePerson}) => {\r\n\r\n    const errase = (id) => {\r\n        deletePerson(id)\r\n    }\r\n    console.log(persons)\r\n    return (\r\n        persons.map( person => \r\n                <li key={person.id}>\r\n                    {person.name} - {person.number}\r\n                    <button onClick={() => errase(person.id)}>Delete</button>\r\n                </li>\r\n            )\r\n        )\r\n\r\n}\r\n\r\nexport default Persons","\r\n\r\nconst Filter = ({addFilter, handleChangeFilter}) => {\r\n  return(<form onSubmit={addFilter}>\r\n    <h3>Let's filter by name: <input onChange={handleChangeFilter}/></h3>\r\n    <div>\r\n      <button type=\"submit\">Filter</button>\r\n    </div>\r\n  </form>)\r\n}\r\n\r\nexport default Filter ","import axios from \"axios\"\r\nconst BASE_URL = \"http://localhost:3001/api/persons\"\r\n\r\n\r\nconst getData = () => {\r\n    return axios\r\n        .get(\"http://localhost:3001/api/persons\")\r\n}\r\n\r\nconst postData = (object) => {\r\n    return axios\r\n        .post(BASE_URL, object)\r\n}\r\n\r\nconst putData = (object) => {\r\n    return axios   \r\n        .put(BASE_URL, object)\r\n}\r\n\r\nconst deleteData = (id, setMessage) => {\r\n    return axios    \r\n            .delete(`http://localhost:3001/api/persons/${id}`)\r\n            .catch(error => {\r\n                console.log(error)\r\n             })\r\n          \r\n}\r\n\r\nexport default {\r\n    getData: getData,\r\n    postData: postData,\r\n    putData: putData,\r\n    deleteData: deleteData\r\n}","import \"../App.css\"\r\nconst Notification = ({ notification }) => {\r\n    if (notification.message === \"\") {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={notification.type ? 'success-message' : \"error-message\"}>\r\n        {notification.message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import React, { useState, useEffect } from 'react'\r\nimport PersonForm from \"./components/personForm\"\r\nimport Persons from \"./components/Persons\"\r\nimport Filter from \"./components/Filter\"\r\nimport fetchData from \"./services/fetchData\"\r\nimport axios from \"axios\"\r\nimport Notification from './components/Notification'\r\nconst App = () => {\r\n\r\n \r\n\r\n  const [ persons, setPersons ] = useState([]) \r\n\r\n  const [ newName, setNewName ] = useState('')\r\n\r\n  const [ newNumber, setNewNumber ] = useState(0)\r\n \r\n  const [filterName, setFilterName] = useState(\"\")\r\n\r\n  const [notification, setNotification] = useState({message: \"\", type: true})\r\n\r\n  const handleChangeName = e => setNewName(e.target.value) \r\n\r\n  const handleChangeNumber = e => setNewNumber(e.target.value) \r\n\r\n  const handleChangeFilter = e => setFilterName(e.target.value)\r\n  \r\n  useEffect(() => {\r\n      fetchData\r\n      .getData()\r\n      .then(response => setPersons(response.data))\r\n  }, [])\r\n\r\n  \r\n  console.log(\"Persons array: \", persons)\r\n\r\n  const addFilter = (e) => {\r\n    e.preventDefault()\r\n    setPersons(persons.filter(person => person.name === filterName))\r\n  }\r\n\r\n  const addNote = (e) => {\r\n    e.preventDefault()\r\n    const noteObject = {\r\n      name : newName,\r\n      number : newNumber\r\n    } \r\n\r\n    fetchData.postData(noteObject)\r\n\r\n    setPersons(persons.filter(person => person.name !== newName).concat(noteObject)) \r\n    setNotification({message: `Added ${noteObject.name}`, type: true})\r\n    persons.forEach(person => {\r\n      if(person.name === noteObject.name) {\r\n        if(window.confirm(`${newName} is already added to phonebook, replace the old number with the new one?`)) {\r\n          fetchData.putData(noteObject)\r\n        } \r\n      }\r\n    })\r\n    setNewName(\"\")\r\n  }\r\n\r\n  const deletePerson = (id) => {\r\n    const filteredPersons =  persons.filter(person => person.id === id);\r\n    const personName = filteredPersons[0].name\r\n    const personId = filteredPersons[0].id\r\n    if(window.confirm(`Delete ${personName} ? `)) {\r\n      setPersons(persons.filter(person => person.id !== personId))\r\n      axios    \r\n            .delete(`http://localhost:3001/persons/${personId}`)\r\n            .catch(error => {\r\n                console.log(error)\r\n                setNotification({message: `Information of ${personName} has already been removed from server`, type: false})\r\n             })\r\n      setNotification({message: `Deleted ${personName}`, type: true})\r\n    } \r\n  } \r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Phonebook</h2>\r\n      <Notification notification={notification}/>\r\n      <PersonForm addNote={addNote} newName={newName} newNumber={newNumber} handleChangeName={handleChangeName} handleChangeNumber={handleChangeNumber}/>\r\n      <Filter addFilter={addFilter} handleChangeFilter={handleChangeFilter}/>\r\n      <h2>Names</h2>\r\n      <Persons persons={persons} deletePerson={deletePerson}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}